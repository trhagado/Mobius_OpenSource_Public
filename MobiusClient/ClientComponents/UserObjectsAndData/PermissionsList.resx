<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Bitmaps16x16.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="Bitmaps16x16.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC+
        BgAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDP8APAABVAFsAW+KAAGmAcgB1QHAAXABYAHAAWABUAGwAVABQAGgAUABMAGg
        ATABIAGDASwBHgGlAcAByxgAAWgBggGHAxABSAFSAVddAAPQASABWAGwAQABSAGwAQABSAGgAQABQAGQ
        AQABOAGAAQABOAGAAcABqAGgAeABwAGwDwAB0AGAAXAB8AGYAYAB/wGYAZAB/wGYAZABwAFYAVAB8AFY
        AUAB4AFQATABkAEoARAbAAEgARgBEAEwASgBIAF4AYoBjxIAATMBQAE7RQABEAFYAbABMAF4AdABUAGI
        AeABQAGIAeABAAFIAaABIAFwAeABEAFQAaABAAEwAXAB4AHIAcAPAAHQAYABcAHwAbABoAH/AaABkAHg
        AZABgAHwAbgBsAHAAVgBUAHgAVgBQAGgATgBIAEwAVABMAEgATgCIAEoASABkQG7AbcPAAFcAWwBcwEp
        ASQBLQFBAUcBSQ8AAUoBUwFWAWYBeQGBRQABIAFgAcABgAGoAeABYAGYAeABAAFIAaABIAFwAeABAAFQ
        AbABIAFwAeABEAFQAaAB8AHQAcAPAAGpAcoB1QHAAXcBaQHAAWgBYAHwAfgB8AH/AfgB/wHAAVgBUAGw
        AUgBMAFwAdABkAFAAZACUAGwAXABVgGdAWkBMAFAATASAAE9AUUBSQMgAVQBXgFjCQABZgF5AYEBOAE7
        ATxIAAGwAcAB0AEQAVgBsAEgAWABsAHQAdgB4AH/AfgB8AEAAVABwAEAAUABkAHAAbgBwAHwAdgB0BIA
        AZ4BsgG+A2ABUAFYAVADYAGwAUgBMAGAAbACgAGwAYABwAHYAcABQAGQAlABqAFwAUABYAFAFQABSgFM
        AUkBMAEoASABXQFlAXADAAFSAV8BZQMwAYEBlwGdSwAD0AFgAWgBcAFQAVgBUANgAQABSAGgAbABuAHA
        AwAB8ALgDwABmQG8AccDAAPAA6ABgAGIAYABUAFYAVABYAFwAWAD8AH/AfgB/wFwAaABcAFAAXgBQAGg
        AagBoBgAAUoBTAFJBjABQAE4ATABQQFAAUlLAAHAAcgBwAMAA8ADoAGAAYgBgAFQAVgBUAGgAZgBoBUA
        AUABOAFAAzAB0AHYAdADwAOgAYABiAGAAWABaAFgA1ADYAFAAXgBUAHAAcgBwBsAAZ0BvgHLAzABQAE4
        AUABQQFHAUlOAAFAATgBQAMwAdAB2AHQA8ADoAGAAYgBgAFgAWgBYBUAAUcBUQFLAVABSAFQAbABuAGw
        AdAB2AHQA8ADoAFwAXgBcAGgAagBoAGAAYgBgAFQAVgBUAOAGAABqQHNAdsBVwFgAWMBQAE4ATABOAE7
        ATwBOAE7ATwBXQJlSwAEUAFIAVABsAG4AbAB0AHYAdADwAOgAXABeAFwFQABcgF6AX0GYANwAWABWAFg
        A8ADgAPAA6ABgAGIAYABYAFoAWAVAAGIAaEBqwZAAXoBigGRAwABeAGHAZMDQAFvAYIBikgAA4AGYANw
        AWABWAFgA8ABgAGIAYAVAAGdAb4BywNwA4ADoAOQAVABWAFQA4AB0AHYAdADwAOgAXABeAFwEgABaAF1
        AXsGQAFzAYABhgkAAXMCewNAAW8BhwGKRQABwAHIAcADcAOAA6ADkAFQAVgBUAOwGAABkQGvAbcBfwGH
        AYoBkAGIAZADgAFgAVgCYAFYAWADcAFgAVgBYAPAAYABiAGADwABaAF1AXsBQAE4ATADQAGIAZoBpxIA
        AVYBUQFaAXABgAGHRQABwAG4AcAEkAGIAZABgAGIAYABsAG4AbAnAANwA4ADoAOQAVABWAFQA6AMAAGR
        Aa8BtwNAAUcBSgFLAZ4BuQHIGAABiAGlAat+AAGQAYgCkAGIAZABgAGIAYADoBIAAWwBcQF7/wAYAAFC
        AU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAG/wIABP8B7wH/AgAC/wHAAT8BxwH/
        AgAB8AEHAcABPwHjAfcCAAHwAQcBwAEDAeMB5wIAAfABBwHAAQMB8QHPAgAB8AEHAeABAwH4AY8CAAH4
        ARcBwAEDAfwBHwIAAfABHwHAAQcB/AE/AgAB8AEfAcABBwH4AR8CAAHwAR8BwAEHAfABjwIAAfABHwHA
        AQcB4QHHAgAB8AEfAeABBwHDAfMCAAH4AT8B/gEHAYcB+wIAA/8BDwHfAf8CAAb/AgAL
</value>
  </data>
</root>